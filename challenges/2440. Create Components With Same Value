var componentValue = function(nums, edges) {
    var dfs = function(nums, g, cur, parent, target) {
        var curSum = nums[cur];
        for (var i = 0; i < g[cur].length; i++) {
            var nbr = g[cur][i];
            if (nbr === parent) continue;
            curSum += dfs(nums, g, nbr, cur, target);
        }
        
        if (curSum === target) {
            return 0;
        } else {
            return curSum;
        }
    };
    
    var n = nums.length;
    var g = new Array(n);
    for (var i = 0; i < n; i++) {
        g[i] = [];
    }
    
    for (var i = 0; i < edges.length; i++) {
        var e = edges[i];
        g[e[0]].push(e[1]);
        g[e[1]].push(e[0]);
    }
    
    var sum = 0;
    for (var i = 0; i < nums.length; i++) {
        sum += nums[i];
    }
    
    var st = {};
    for (var i = 0; i < nums.length; i++) {
        st[nums[i]] = true;
    }
    var numDistinctValues = Object.keys(st).length;
    
    if (numDistinctValues === 1) {
        return n - 1;
    }
    
    for (var i = n - 1; i >= 2; i--) {
        if (sum % i !== 0) continue;
        
        var ans = dfs(nums, g, 0, -1, sum / i);
        
        if (ans === 0) return i - 1;
    }
    
    return 0;
};

