var maxPerformance = function(n, speed, efficiency, k) {
  const MOD = 10 ** 9 + 7;
  const candidates = speed.map((s, i) => [efficiency[i], s]);
  candidates.sort((a, b) => b[0] - a[0]);
  const pq = new MinPriorityQueue({ compare: (x, y) => x - y });
  
  let res = 0n, speedSum = 0;
  for (const [e, s] of candidates) {
    if (pq.size() === k) speedSum -= pq.dequeue();
    pq.enqueue(s);
    speedSum += s;
    const cur = BigInt(speedSum) * BigInt(e);
    if (cur > res) res = cur;
  }

  // التحويل إلى رقم عادي قبل الإرجاع
  return Number(res % BigInt(MOD));
};
