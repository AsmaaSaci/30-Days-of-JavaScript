/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var minOrAfterOperations = function(nums, k) {
   const ALL = 2 ** 30 - 1;
    const maxBit = Math.floor(Math.log2(Math.max(...nums)));

    let minOr = 0;
    for (let bit = maxBit; bit >= 0; bit -= 1) {
      const lowerMask = (1 << bit) - 1;
      const targetMask = minOr | lowerMask
      
      let currMask = ALL;
      let count = 0;

      for (const num of nums) {
        currMask &= num;
        if ((currMask | targetMask) === targetMask) currMask = ALL;
        else count += 1;
      }

      if (count > k) minOr |= 1 << bit;
    }

    return minOr;
};
