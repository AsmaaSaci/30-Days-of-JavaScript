/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var sumOfPower = function(nums, k) {

    let dp = new Array(nums.length+1)
    for(let i=0;i<dp.length;i++){
        dp[i] = new Array(nums.length+1)
        for(let j=0;j<dp[i].length;j++){
            dp[i][j] = new Array(k+1).fill(-1)
        }
    }

    return recur(0,k,0,nums, dp)
};

const recur = (index, k, size, arr, dp) => {
    if(k < 0){
        return 0
    }

    if(k == 0){
        let res = 1
        for(let i=0;i<(arr.length - size);i++){
            res = ((res*2)%1000000007)
        }
        return res
    }

    if(index >= arr.length){
        return 0
    }

    if(dp[index][size][k] != -1){
        return dp[index][size][k]
    }

    let take = 0
    let skip = 0

    take = recur(index+1, k-arr[index], size+1, arr, dp)
    skip = recur(index+1, k, size, arr, dp)

    return dp[index][size][k] = (take+skip)%1000000007
}
